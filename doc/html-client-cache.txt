This document is an attempt to design a
way to cache HTTP clients to re-use sockets via
keep-alive.

Basically the plan is to implement an object
GskHttpClientCache which implements all the keep-alive
configuration, as well as the actual cache of potentially
reusable connections.

To do this, the cache has methods which allow setting
various aspects of the configuration depending on
IP-Address and hostname of the URL.

Also, there is a backend API for donating potentially
reusable client/stream-fd pairs to the cache.
The only user of this API will be GskUrlTransferHttp, probably.

Another aspect to clean up with this rewrite is to add
automatic retry of an HTTP connection to UrlTransferHttp.


HTTP CLIENT CACHE CONFIGURATION
-------------------------------
Configuration is on a IP-Address and/or host-name basis;
that is, there's a http_client_cache_add_config(HttpClientCache,
                                                SocketAddress, /* optional */
                                                char *hostname,/* optional */
						HttpClientCacheConfig);
(there's a "default" configuration: see
gsk_http_client_cache_get_defaults(), and helper functions.)

After a cache has been used, it becomes immutable.
That is, you must finish configuring the cache
before you use it.

Then the rest of the work is constructing client-cache-config objects.


SUGAR
-----
Instead of forcing the user to do:
  gsk_http_client_cache_config_set_idle_timeout (gsk_http_client_cache_get_defaults(cache), 120*1000);
make helper functions for the "defaults" config:
  gsk_http_client_cache_set_idle_timeout (cache, 120*1000);

likewise, there should probably be a default client-cache for
url-transfer so that you can just do
  cache = gsk_http_client_cache_new ();
  gsk_url_transfer_http_set_default_client_cache (cache);
to enable keepalive.

In fact, that last example should probably happen in gsk_init():
the user can do gsk_url_transfer_http_set_default_client_cache (NULL)
to disable caching.


WHAT WE ARE NOT DOING
---------------------
Providing an abstraction for HttpClientCache:
we may allow the user to register certain function-pointers
but that'll be it, at least for now.

